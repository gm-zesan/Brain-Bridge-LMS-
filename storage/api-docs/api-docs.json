{
    "openapi": "3.0.0",
    "info": {
        "title": "Brain Bridge API Documentation",
        "description": "API documentation for Brain Bridge application",
        "contact": {
            "email": "gmzesan7767@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user with Firebase and creates a local user record",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Logs in a user using Firebase authentication",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "jhon@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/skills": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Get list of all skills",
                "description": "Returns all skills from the database",
                "operationId": "getSkillsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Skills"
                ],
                "summary": "Create a new skill",
                "description": "Creates a new skill",
                "operationId": "storeSkill",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Problem Solving"
                                    },
                                    "subject_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Skill created successfully"
                    }
                }
            }
        },
        "/api/skills/{id}": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Get skill information",
                "description": "Returns skill data",
                "operationId": "getSkillById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Skill id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Skill not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Skills"
                ],
                "summary": "Update an existing skill",
                "operationId": "updateSkill",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "subject_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Skill updated successfully"
                    },
                    "404": {
                        "description": "Skill not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Skills"
                ],
                "summary": "Delete a skill",
                "operationId": "deleteSkill",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Skill deleted successfully"
                    },
                    "404": {
                        "description": "Skill not found"
                    }
                }
            }
        },
        "/api/students": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get list of all students",
                "description": "Returns all students from the database",
                "operationId": "getStudentsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/students/{id}": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get student information",
                "operationId": "getStudentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Students"
                ],
                "summary": "Update student information",
                "operationId": "updateStudent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jane@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+19876543210"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "This is my updated bio"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Student updated successfully"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            }
        },
        "/api/subjects": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get list of all subjects",
                "description": "Returns all subjects from the database",
                "operationId": "getSubjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Create a new subject",
                "description": "Creates a new subject",
                "operationId": "storeSubject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mathematics"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subject created successfully"
                    }
                }
            }
        },
        "/api/subjects/{id}": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get subject information",
                "description": "Returns subject data",
                "operationId": "getSubjectById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subject id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Subject not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Update an existing subject",
                "operationId": "updateSubject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subject ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Physics"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subject updated successfully"
                    },
                    "404": {
                        "description": "Subject not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Delete a subject",
                "operationId": "deleteSubject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subject ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject deleted successfully"
                    },
                    "404": {
                        "description": "Subject not found"
                    }
                }
            }
        },
        "/api/teachers": {
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get list of all teachers",
                "description": "Returns all teachers from the database",
                "operationId": "getTeachersList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Create a new teacher",
                "description": "Creates a teacher and associated Firebase user",
                "operationId": "storeTeacher",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Math Teacher"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Teacher created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/teachers/{id}": {
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get teacher by ID",
                "operationId": "showTeacher",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Teacher ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Teacher not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Update teacher info",
                "operationId": "updateTeacher",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "introduction_video": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "bio": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "profile_picture": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Teacher updated successfully"
                    },
                    "404": {
                        "description": "Teacher not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Delete a teacher",
                "operationId": "deleteTeacher",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher deleted successfully"
                    },
                    "404": {
                        "description": "Teacher not found"
                    }
                }
            }
        },
        "/api/teacher-levels": {
            "get": {
                "tags": [
                    "Teacher Levels"
                ],
                "summary": "Get all teacher levels",
                "description": "Returns a list of all teacher levels",
                "operationId": "getTeacherLevels",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Teacher Levels"
                ],
                "summary": "Create a new teacher level",
                "operationId": "storeTeacherLevel",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "level_name"
                                ],
                                "properties": {
                                    "level_name": {
                                        "type": "string",
                                        "example": "Senior"
                                    },
                                    "min_rating": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "max_rating": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "benefits": {
                                        "type": "string",
                                        "example": "Access to premium resources"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Teacher level created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/teacher-levels/{id}": {
            "get": {
                "tags": [
                    "Teacher Levels"
                ],
                "summary": "Get a specific teacher level",
                "operationId": "showTeacherLevel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Teacher Level ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Teacher Level not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Teacher Levels"
                ],
                "summary": "Update a teacher level",
                "operationId": "updateTeacherLevel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Teacher Level ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "level_name": {
                                        "type": "string",
                                        "example": "Senior"
                                    },
                                    "min_rating": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "max_rating": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "benefits": {
                                        "type": "string",
                                        "example": "Access to premium resources"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Teacher level updated successfully"
                    },
                    "404": {
                        "description": "Teacher Level not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Teacher Levels"
                ],
                "summary": "Delete a teacher level",
                "operationId": "deleteTeacherLevel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Teacher Level ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher level deleted successfully"
                    },
                    "404": {
                        "description": "Teacher Level not found"
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get list of all transactions",
                "description": "Returns all transactions from the database",
                "operationId": "getTransactionsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/transactions/stripe/initiate": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Initiate a Stripe payment",
                "description": "Creates a Stripe Checkout Session for payment",
                "operationId": "initiateStripePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "video_lesson_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "video_lesson_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stripe Checkout Session created successfully"
                    }
                }
            }
        },
        "/api/transactions/success": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Handle successful Stripe payment",
                "operationId": "stripePaymentSuccess",
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "query",
                        "description": "Stripe Checkout Session ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment successful"
                    }
                }
            }
        },
        "/api/transactions/cancel": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Handle canceled Stripe payment",
                "operationId": "stripePaymentCancel",
                "responses": {
                    "200": {
                        "description": "Payment canceled"
                    }
                }
            }
        },
        "/api/transactions/stripe/webhook": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Handle Stripe webhook events",
                "operationId": "handleStripeWebhook",
                "responses": {
                    "200": {
                        "description": "Webhook handled successfully"
                    }
                }
            }
        },
        "/api/transactions/manual": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Record a manual transaction",
                "operationId": "manualTransaction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "amount",
                                    "type"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "video_lesson_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "lesson_session_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 49.99
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "usd"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "payment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Manual transaction recorded successfully"
                    }
                }
            }
        },
        "/api/transactions/{id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction information",
                "description": "Returns transaction data",
                "operationId": "getTransactionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete a transaction",
                "description": "Deletes a transaction by ID",
                "operationId": "deleteTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "operationId": "getUsersList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user information",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "This is my bio"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City, Country"
                                    },
                                    "profile_picture": {
                                        "type": "string",
                                        "example": "http://example.com/profile.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/video-lessons": {
            "get": {
                "tags": [
                    "Video Lessons"
                ],
                "summary": "Get list of all video lessons",
                "description": "Returns all video lessons from the database",
                "operationId": "getVideoLessonsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Video Lessons"
                ],
                "summary": "Create a new video lesson",
                "description": "Creates a new video lesson",
                "operationId": "storeVideoLesson",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "teacher_id",
                                    "subject_id",
                                    "title",
                                    "video_url"
                                ],
                                "properties": {
                                    "teacher_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "subject_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Algebra"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A basic introduction to algebraic concepts."
                                    },
                                    "old_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 49.99
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.99
                                    },
                                    "duration_hours": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "video_url": {
                                        "type": "string",
                                        "example": "https://example.com/video.mp4"
                                    },
                                    "is_published": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Video lesson created successfully"
                    }
                }
            }
        },
        "/api/video-lessons/{id}": {
            "get": {
                "tags": [
                    "Video Lessons"
                ],
                "summary": "Get video lesson information",
                "description": "Returns video lesson data",
                "operationId": "getVideoLessonById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Video Lesson id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Video Lesson not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Video Lessons"
                ],
                "summary": "Update an existing video lesson",
                "description": "Updates a video lesson by ID",
                "operationId": "updateVideoLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Video Lesson ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "old_price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "duration_hours": {
                                        "type": "integer"
                                    },
                                    "video_url": {
                                        "type": "string"
                                    },
                                    "is_published": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video lesson updated successfully"
                    },
                    "404": {
                        "description": "Video Lesson not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Video Lessons"
                ],
                "summary": "Delete a video lesson",
                "description": "Deletes a video lesson by ID",
                "operationId": "deleteVideoLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Video Lesson ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video lesson deleted successfully"
                    },
                    "404": {
                        "description": "Video Lesson not found"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "200": {
                "description": "User retrieved successfully"
            },
            "401": {
                "description": "Unauthorized"
            }
        }
    },
    "tags": [
        {
            "name": "Teacher Levels",
            "description": "API Endpoints for managing Teacher Levels"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Skills",
            "description": "Skills"
        },
        {
            "name": "Students",
            "description": "Students"
        },
        {
            "name": "Subjects",
            "description": "Subjects"
        },
        {
            "name": "Teachers",
            "description": "Teachers"
        },
        {
            "name": "Transactions",
            "description": "Transactions"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Video Lessons",
            "description": "Video Lessons"
        }
    ]
}